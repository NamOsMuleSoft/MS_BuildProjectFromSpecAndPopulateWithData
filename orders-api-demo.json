{
  "openapi": "3.0.0",
  "info": {
    "title": "Orders api demo",
    "version": "1.0.0",
    "description": "An API for agents to create and retrieve product orders. Supports bulk creation."
  },
  "servers": [
    {
      "url": "https://api.example.com/v1",
      "description": "Production Server"
    }
  ],
  "tags": [
    {
      "name": "Orders",
      "description": "Operations for managing orders"
    }
  ],
  "paths": {
    "/orders": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "List all orders",
        "description": "Retrieves a list of all existing orders.",
        "operationId": "listOrders",
        "responses": {
          "200": {
            "description": "A JSON array of orders.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Order"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "Create one or more orders",
        "description": "Creates multiple new orders in a single batch request. The server will generate the `orderId` and `orderDate` for each created order.",
        "operationId": "createOrders",
        "requestBody": {
          "description": "An array of order objects to create.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NewOrder"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Orders created successfully. Returns an array of the newly created orders.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Order"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Order": {
        "type": "object",
        "description": "Represents a complete order object.",
        "properties": {
          "orderId": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the order.",
            "readOnly": true,
            "example": "a1b2c3d4-e5f6-7890-1234-567890abcdef"
          },
          "product": {
            "type": "string",
            "description": "Name of the product.",
            "example": "Super Widget"
          },
          "quantity": {
            "type": "integer",
            "description": "Number of units ordered.",
            "example": 10
          },
          "price": {
            "type": "number",
            "format": "float",
            "description": "Price per unit.",
            "example": 29.99
          },
          "orderDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time the order was placed.",
            "readOnly": true,
            "example": "2025-09-18T09:30:00Z"
          }
        },
        "required": [
          "orderId",
          "product",
          "quantity",
          "price",
          "orderDate"
        ]
      },
      "NewOrder": {
        "type": "object",
        "description": "Data needed to create a new order.",
        "properties": {
          "product": {
            "type": "string",
            "description": "Name of the product.",
            "example": "Mega Gadget"
          },
          "quantity": {
            "type": "integer",
            "description": "Number of units ordered.",
            "example": 5
          },
          "price": {
            "type": "number",
            "format": "float",
            "description": "Price per unit.",
            "example": 99.50
          }
        },
        "required": [
          "product",
          "quantity",
          "price"
        ]
      },
      "Error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ]
      }
    },
    "responses": {
      "BadRequest": {
        "description": "Bad Request - The server could not understand the request due to invalid syntax or failed validation.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "code": 400,
              "message": "Invalid input provided for one or more orders."
            }
          }
        }
      }
    }
  }
}